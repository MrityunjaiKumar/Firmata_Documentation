<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_firmata_marshaller_8cpp" kind="file" language="C++">
    <compoundname>FirmataMarshaller.cpp</compoundname>
    <includes refid="_firmata_marshaller_8h" local="yes">FirmataMarshaller.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="_firmata_constants_8h" local="yes">FirmataConstants.h</includes>
    <incdepgraph>
      <node id="7">
        <label>FirmataConstants.h</label>
        <link refid="_firmata_constants_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>FirmataMarshaller.cpp</label>
        <link refid="_firmata_marshaller_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>FirmataMarshaller.h</label>
        <link refid="_firmata_marshaller_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Stream.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>FirmataMarshaller.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2006-2008<sp/>Hans-Christoph<sp/>Steiner.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009-2016<sp/>Jeff<sp/>Hoefs.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>See<sp/>file<sp/>LICENSE.txt<sp/>for<sp/>further<sp/>informations<sp/>on<sp/>licensing<sp/>terms.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//*<sp/>Includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_firmata_marshaller_8h" kindref="compound">FirmataMarshaller.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)<sp/>&amp;&amp;<sp/>!defined(ARDUINO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_firmata_constants_8h" kindref="compound">FirmataConstants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefirmata" kindref="compound">firmata</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//*<sp/>Support<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FirmataMarshaller::reportAnalog(uint8_t<sp/>pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_enable)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pin<sp/>can<sp/>only<sp/>be<sp/>0-15,<sp/>so<sp/>chop<sp/>higher<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1aea1b306b1e7d3751bba41f311b755a99" kindref="member">REPORT_ANALOG</ref><sp/>|<sp/>(pin<sp/>&amp;<sp/>0xF));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(stream_enable);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FirmataMarshaller::reportDigitalPort(uint8_t<sp/>portNumber,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_enable)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="61"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="62"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a00a56f93ad64fa08998b7db2054180a6" kindref="member">REPORT_DIGITAL</ref><sp/>|<sp/>(portNumber<sp/>&amp;<sp/>0xF));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(stream_enable);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FirmataMarshaller::sendExtendedAnalog(uint8_t<sp/>pin,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytec,<sp/>uint8_t<sp/>*<sp/>bytev)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a8210ab38d9279ef1ea406ff7e1db0893" kindref="member">START_SYSEX</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1af63c2236acda8928ec0f40b5455012f7" kindref="member">EXTENDED_ANALOG</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(pin);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>encodeByteStream(bytec,<sp/>bytev,<sp/>bytec);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1aa4c7b2c2365334150eff56b64c87e6e0" kindref="member">END_SYSEX</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FirmataMarshaller::encodeByteStream<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytec,<sp/>uint8_t<sp/>*<sp/>bytev,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_bytes)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="93"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>transmit_bits<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>transmit_mask<sp/>=<sp/>((1<sp/>&lt;&lt;<sp/>transmit_bits)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_sent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outstanding_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>uint8_t<sp/>outstanding_bit_cache<sp/>=<sp/>*bytev;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!max_bytes<sp/>)<sp/>{<sp/>max_bytes<sp/>=<sp/>static_cast&lt;size_t&gt;(-1);<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>(i<sp/>&lt;<sp/>bytec)<sp/>&amp;&amp;<sp/>(bytes_sent<sp/>&lt;<sp/>max_bytes)<sp/>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>transmit_byte<sp/>=<sp/>(outstanding_bit_cache|(bytev[i]<sp/>&lt;&lt;<sp/>outstanding_bits));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>FirmataStream-&gt;write(transmit_mask<sp/>&amp;<sp/>transmit_byte);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>++bytes_sent;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>outstanding_bit_cache<sp/>=<sp/>(bytev[i]<sp/>&gt;&gt;<sp/>(transmit_bits<sp/>-<sp/>outstanding_bits));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>outstanding_bits<sp/>=<sp/>(outstanding_bits<sp/>+<sp/>(8<sp/>-<sp/>transmit_bits));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>(outstanding_bits<sp/>&gt;=<sp/>transmit_bits)<sp/>&amp;&amp;<sp/>(bytes_sent<sp/>&lt;<sp/>max_bytes)<sp/>;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transmit_byte<sp/>=<sp/>outstanding_bit_cache;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>FirmataStream-&gt;write(transmit_mask<sp/>&amp;<sp/>transmit_byte);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++bytes_sent;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outstanding_bit_cache<sp/>&gt;&gt;=<sp/>transmit_bits;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outstanding_bits<sp/>-=<sp/>transmit_bits;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>outstanding_bits<sp/>&amp;&amp;<sp/>(bytes_sent<sp/>&lt;<sp/>max_bytes)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>FirmataStream-&gt;write(static_cast&lt;uint8_t&gt;((1<sp/>&lt;&lt;<sp/>outstanding_bits)<sp/>-<sp/>1)<sp/>&amp;<sp/>outstanding_bit_cache);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//*<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classfirmata_1_1_firmata_marshaller_1ad1a42532bdf77088c47c1a62f5a03829" refkind="member"><highlight class="normal"><ref refid="classfirmata_1_1_firmata_marshaller_1ad1a42532bdf77088c47c1a62f5a03829" kindref="member">FirmataMarshaller::FirmataMarshaller</ref>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>FirmataStream((Stream<sp/>*)NULL)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//*<sp/>Public<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classfirmata_1_1_firmata_marshaller_1a5be18ca3658875dbe5580c2254071c76" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a5be18ca3658875dbe5580c2254071c76" kindref="member">FirmataMarshaller::begin</ref>(Stream<sp/>&amp;s)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>FirmataStream<sp/>=<sp/>&amp;s;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classfirmata_1_1_firmata_marshaller_1ab856434fc577b1e069cba51c39daf1de" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1ab856434fc577b1e069cba51c39daf1de" kindref="member">FirmataMarshaller::end</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>FirmataStream<sp/>=<sp/>(Stream<sp/>*)NULL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//*<sp/>Output<sp/>Stream<sp/>Handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//******************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classfirmata_1_1_firmata_marshaller_1af954bcf09b77458b3c4f032897d14697" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1af954bcf09b77458b3c4f032897d14697" kindref="member">FirmataMarshaller::queryFirmwareVersion</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="166"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a8210ab38d9279ef1ea406ff7e1db0893" kindref="member">START_SYSEX</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a27aae72a38fab1b0b039d7687e294398" kindref="member">REPORT_FIRMWARE</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1aa4c7b2c2365334150eff56b64c87e6e0" kindref="member">END_SYSEX</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classfirmata_1_1_firmata_marshaller_1a488fbbd372c894ec78ebb99e0faf5167" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a488fbbd372c894ec78ebb99e0faf5167" kindref="member">FirmataMarshaller::queryVersion</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="178"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a7aa955ae4335c171096a0224bf279f5b" kindref="member">REPORT_VERSION</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classfirmata_1_1_firmata_marshaller_1a2668d1332704bbf9938f386e247a8f30" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a2668d1332704bbf9938f386e247a8f30" kindref="member">FirmataMarshaller::reportAnalogDisable</ref>(uint8_t<sp/>pin)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="192"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>reportAnalog(pin,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classfirmata_1_1_firmata_marshaller_1a67b3db7232143acf63bd48b765fcc4db" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a67b3db7232143acf63bd48b765fcc4db" kindref="member">FirmataMarshaller::reportAnalogEnable</ref>(uint8_t<sp/>pin)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="205"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>reportAnalog(pin,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classfirmata_1_1_firmata_marshaller_1aa00582e6e014605a65a8953f8275a5ad" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1aa00582e6e014605a65a8953f8275a5ad" kindref="member">FirmataMarshaller::reportDigitalPortDisable</ref>(uint8_t<sp/>portNumber)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="218"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>reportDigitalPort(portNumber,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classfirmata_1_1_firmata_marshaller_1a608c28cdc966c33d0cc2239d9465ef7c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a608c28cdc966c33d0cc2239d9465ef7c" kindref="member">FirmataMarshaller::reportDigitalPortEnable</ref>(uint8_t<sp/>portNumber)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="231"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="232"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>reportDigitalPort(portNumber,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classfirmata_1_1_firmata_marshaller_1a4d9f2d3bb058237404dfe433cfe7571a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a4d9f2d3bb058237404dfe433cfe7571a" kindref="member">FirmataMarshaller::sendAnalog</ref>(uint8_t<sp/>pin,<sp/>uint16_t<sp/>value)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="246"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="247"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(0xF<sp/>&gt;=<sp/>pin)<sp/>&amp;&amp;<sp/>(0x3FFF<sp/>&gt;=<sp/>value)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1aea14613546a585cfec72d5b0f79365ef" kindref="member">ANALOG_MESSAGE</ref>|pin);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeByteStream(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value),<sp/>reinterpret_cast&lt;uint8_t<sp/>*&gt;(&amp;value),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>sendExtendedAnalog(pin,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value),<sp/>reinterpret_cast&lt;uint8_t<sp/>*&gt;(&amp;value));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classfirmata_1_1_firmata_marshaller_1a1c987a534cc8dd197eb2f2a728bdacb3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a1c987a534cc8dd197eb2f2a728bdacb3" kindref="member">FirmataMarshaller::sendAnalogMappingQuery</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="263"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="264"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1ade4f4592877ec0b9f8d6c74e909bad8e" kindref="member">sendSysex</ref>(<ref refid="namespacefirmata_1a2dafec1845e07af47dca44cfb7c2a845" kindref="member">ANALOG_MAPPING_QUERY</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classfirmata_1_1_firmata_marshaller_1a1f1c5ce29ba4488306c9a1e3f158b781" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a1f1c5ce29ba4488306c9a1e3f158b781" kindref="member">FirmataMarshaller::sendCapabilityQuery</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="274"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="275"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1ade4f4592877ec0b9f8d6c74e909bad8e" kindref="member">sendSysex</ref>(<ref refid="namespacefirmata_1a5e9aa179fe2a6f6fc8cf1111dfb10fcc" kindref="member">CAPABILITY_QUERY</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classfirmata_1_1_firmata_marshaller_1a2d90627f0543b6298be71f7d903399b3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a2d90627f0543b6298be71f7d903399b3" kindref="member">FirmataMarshaller::sendDigital</ref>(uint8_t<sp/>pin,<sp/>uint8_t<sp/>value)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="285"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="286"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a0a75e8e1855e7dedbbbfd17711f152af" kindref="member">SET_DIGITAL_PIN_VALUE</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(pin<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(value<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classfirmata_1_1_firmata_marshaller_1a346dcb4487a51efaa95de42d292ad951" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a346dcb4487a51efaa95de42d292ad951" kindref="member">FirmataMarshaller::sendDigitalPort</ref>(uint8_t<sp/>portNumber,<sp/>uint16_t<sp/>portData)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="303"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a49bf6564630519f4293bd39a71a95b00" kindref="member">DIGITAL_MESSAGE</ref><sp/>|<sp/>(portNumber<sp/>&amp;<sp/>0xF));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tx<sp/>bits<sp/><sp/>0-6<sp/>(protocol<sp/>v1<sp/>and<sp/>higher)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tx<sp/>bits<sp/>7-13<sp/>(bit<sp/>7<sp/>only<sp/>for<sp/>protocol<sp/>v2<sp/>and<sp/>higher)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>encodeByteStream(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portData),<sp/>reinterpret_cast&lt;uint8_t<sp/>*&gt;(&amp;portData),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(portData));</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="classfirmata_1_1_firmata_marshaller_1aed71d62cc41f2e0bf3f161894b91be7c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1aed71d62cc41f2e0bf3f161894b91be7c" kindref="member">FirmataMarshaller::sendFirmwareVersion</ref>(uint8_t<sp/>major,<sp/>uint8_t<sp/>minor,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytec,<sp/>uint8_t<sp/>*bytev)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="320"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="321"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a8210ab38d9279ef1ea406ff7e1db0893" kindref="member">START_SYSEX</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a27aae72a38fab1b0b039d7687e294398" kindref="member">REPORT_FIRMWARE</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(major);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(minor);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bytec;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeByteStream(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bytev[i]),<sp/>reinterpret_cast&lt;uint8_t<sp/>*&gt;(&amp;bytev[i]));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1aa4c7b2c2365334150eff56b64c87e6e0" kindref="member">END_SYSEX</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classfirmata_1_1_firmata_marshaller_1a95d58949e32ad285088705dbe5680b29" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a95d58949e32ad285088705dbe5680b29" kindref="member">FirmataMarshaller::sendVersion</ref>(uint8_t<sp/>major,<sp/>uint8_t<sp/>minor)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="340"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="341"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a7aa955ae4335c171096a0224bf279f5b" kindref="member">REPORT_VERSION</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(major);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(minor);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classfirmata_1_1_firmata_marshaller_1a36b6cc103609d900cce36149a239f221" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a36b6cc103609d900cce36149a239f221" kindref="member">FirmataMarshaller::sendPinMode</ref>(uint8_t<sp/>pin,<sp/>uint8_t<sp/>config)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="356"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="357"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a5ecb59a9641299fcaf2e4ce96587c1f8" kindref="member">SET_PIN_MODE</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(pin);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(config);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classfirmata_1_1_firmata_marshaller_1afc378ab4a39c843d4419acdee944972b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1afc378ab4a39c843d4419acdee944972b" kindref="member">FirmataMarshaller::sendPinStateQuery</ref>(uint8_t<sp/>pin)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="372"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="373"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a8210ab38d9279ef1ea406ff7e1db0893" kindref="member">START_SYSEX</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a6a99bd6639cb0c31e495a06299235400" kindref="member">PIN_STATE_QUERY</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(pin);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1aa4c7b2c2365334150eff56b64c87e6e0" kindref="member">END_SYSEX</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="classfirmata_1_1_firmata_marshaller_1ade4f4592877ec0b9f8d6c74e909bad8e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1ade4f4592877ec0b9f8d6c74e909bad8e" kindref="member">FirmataMarshaller::sendSysex</ref>(uint8_t<sp/>command,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytec,<sp/>uint8_t<sp/>*bytev)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="389"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="390"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1a8210ab38d9279ef1ea406ff7e1db0893" kindref="member">START_SYSEX</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(command);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bytec;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeByteStream(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bytev[i]),<sp/>reinterpret_cast&lt;uint8_t<sp/>*&gt;(&amp;bytev[i]));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1aa4c7b2c2365334150eff56b64c87e6e0" kindref="member">END_SYSEX</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classfirmata_1_1_firmata_marshaller_1a483ac2dea885ab3472dc38b99bfdec2f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a483ac2dea885ab3472dc38b99bfdec2f" kindref="member">FirmataMarshaller::sendString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="406"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="407"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1ade4f4592877ec0b9f8d6c74e909bad8e" kindref="member">sendSysex</ref>(<ref refid="namespacefirmata_1ada4a2133aced1b1051f4663a8365bbc6" kindref="member">STRING_DATA</ref>,<sp/>strlen(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">),<sp/>reinterpret_cast&lt;uint8_t<sp/>*&gt;(const_cast&lt;char<sp/>*&gt;(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classfirmata_1_1_firmata_marshaller_1abb8f4c79dd8a0dbee3f5e04c587ae20c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1abb8f4c79dd8a0dbee3f5e04c587ae20c" kindref="member">FirmataMarshaller::setSamplingInterval</ref>(uint16_t<sp/>interval_ms)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="417"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="418"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1ade4f4592877ec0b9f8d6c74e909bad8e" kindref="member">sendSysex</ref>(<ref refid="namespacefirmata_1a10cd53a86cb2598fdd5d451e4262365c" kindref="member">SAMPLING_INTERVAL</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(interval_ms),<sp/>reinterpret_cast&lt;uint8_t<sp/>*&gt;(&amp;interval_ms));</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classfirmata_1_1_firmata_marshaller_1a3a585937f94b1f9e51797e5950a33206" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfirmata_1_1_firmata_marshaller_1a3a585937f94b1f9e51797e5950a33206" kindref="member">FirmataMarshaller::systemReset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="427"><highlight class="keyword">const</highlight></codeline>
<codeline lineno="428"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Stream<sp/>*)NULL<sp/>==<sp/>FirmataStream<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>FirmataStream-&gt;write(<ref refid="namespacefirmata_1abba911f61c8df9fc6f6ea7bf041a22b5" kindref="member">SYSTEM_RESET</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="arduino/FirmataMarshaller.cpp"/>
  </compounddef>
</doxygen>
